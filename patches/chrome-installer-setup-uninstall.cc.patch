diff --git a/chrome/installer/setup/uninstall.cc b/chrome/installer/setup/uninstall.cc
index 4f80e368b5417fc399687f9ae9f9cca1812105c6..5c2a60afe0e87dd424daa67fcc5ddb476e2b5759 100644
--- a/chrome/installer/setup/uninstall.cc
+++ b/chrome/installer/setup/uninstall.cc
@@ -358,16 +358,16 @@ InstallStatus IsChromeActiveOrUserCancelled(
   options.AppendSwitch(installer::switches::kUninstall);
 
   // Here we want to save user from frustration (in case of Chrome crashes)
-  // and continue with the uninstallation as long as chrome.exe process exit
+  // and continue with the uninstallation as long as kalama.exe process exit
   // code is NOT one of the following:
-  // - UNINSTALL_CHROME_ALIVE - chrome.exe is currently running
+  // - UNINSTALL_CHROME_ALIVE - kalama.exe is currently running
   // - UNINSTALL_USER_CANCEL - User cancelled uninstallation
-  // - HUNG - chrome.exe was killed by HuntForZombieProcesses() (until we can
-  //          give this method some brains and not kill chrome.exe launched
+  // - HUNG - kalama.exe was killed by HuntForZombieProcesses() (until we can
+  //          give this method some brains and not kill kalama.exe launched
   //          by us, we will not uninstall if we get this return code).
-  VLOG(1) << "Launching Chrome to do uninstall tasks.";
+  VLOG(1) << "Launching kalama to do uninstall tasks.";
   if (LaunchChromeAndWait(installer_state.target_path(), options, &exit_code)) {
-    VLOG(1) << "chrome.exe launched for uninstall confirmation returned: "
+    VLOG(1) << "kalama.exe launched for uninstall confirmation returned: "
             << exit_code;
     if ((exit_code == chrome::RESULT_CODE_UNINSTALL_CHROME_ALIVE) ||
         (exit_code == chrome::RESULT_CODE_UNINSTALL_USER_CANCEL) ||
@@ -377,7 +377,7 @@ InstallStatus IsChromeActiveOrUserCancelled(
     if (exit_code == chrome::RESULT_CODE_UNINSTALL_DELETE_PROFILE)
       return installer::UNINSTALL_DELETE_PROFILE;
   } else {
-    PLOG(ERROR) << "Failed to launch chrome.exe for uninstall confirmation.";
+    PLOG(ERROR) << "Failed to launch kalama.exe for uninstall confirmation.";
   }
 
   return installer::UNINSTALL_CONFIRMED;
@@ -918,6 +918,7 @@ InstallStatus UninstallProduct(const ModifyParams& modify_params,
 
   const std::wstring suffix(
       ShellUtil::GetCurrentInstallationSuffix(chrome_exe));
+  VLOG(1) << "suffix " << suffix;
 
   // Remove all Chrome registration keys.
   // Registration data is put in HKCU for both system level and user level
