diff --git a/chrome/installer/setup/install_worker.cc b/chrome/installer/setup/install_worker.cc
index 26f47c9d6e7cf55c8ed0fc0e73250e9c5d7cb09d..500e54489c08ba733042db2eeb48db1074cd0b84 100644
--- a/chrome/installer/setup/install_worker.cc
+++ b/chrome/installer/setup/install_worker.cc
@@ -36,6 +36,7 @@
 #include "base/win/sid.h"
 #include "base/win/win_util.h"
 #include "base/win/windows_version.h"
+#include "base/debug/stack_trace.h"
 #include "build/branding_buildflags.h"
 #include "chrome/install_static/buildflags.h"
 #include "chrome/install_static/install_details.h"
@@ -172,6 +173,7 @@ void RemoveFirewallRulesCallback(const base::FilePath& chrome_path,
 void AddFirewallRulesWorkItems(const InstallerState& installer_state,
                                bool is_new_install,
                                WorkItemList* list) {
+  VLOG(1) << __FUNCTION__;
   base::FilePath chrome_path = installer_state.target_path().Append(kChromeExe);
   WorkItem* item = list->AddCallbackWorkItem(
       base::BindOnce(&AddFirewallRulesCallback, chrome_path),
@@ -456,6 +458,7 @@ void AddUninstallShortcutWorkItems(const InstallParams& install_params,
   AppendUninstallCommandLineFlags(installer_state, &uninstall_arguments);
 
   std::wstring update_state_key(install_static::GetClientStateKeyPath());
+  VLOG(1) << __FUNCTION__ << " update_state_key " << update_state_key;
   install_list->AddCreateRegKeyWorkItem(reg_root, update_state_key,
                                         KEY_WOW64_32KEY);
   install_list->AddSetRegValueWorkItem(
@@ -480,10 +483,11 @@ void AddUninstallShortcutWorkItems(const InstallParams& install_params,
                                          KEY_WOW64_32KEY,
                                          installer::kUninstallDisplayNameField,
                                          InstallUtil::GetDisplayName(), true);
+    base::FilePath uninstall_cmd = install_path.DirName().Append(installer::kKalamaUninstallBin);
     install_list->AddSetRegValueWorkItem(
         reg_root, uninstall_reg, KEY_WOW64_32KEY,
         installer::kUninstallStringField,
-        quoted_uninstall_cmd.GetCommandLineString(), true);
+        ASCIIToWide(uninstall_cmd.AsUTF8Unsafe()), true);
     install_list->AddSetRegValueWorkItem(reg_root, uninstall_reg,
                                          KEY_WOW64_32KEY, L"InstallLocation",
                                          install_path.value(), true);
@@ -848,6 +852,7 @@ bool AppendPostInstallTasks(const InstallParams& install_params,
 
 void AddInstallWorkItems(const InstallParams& install_params,
                          WorkItemList* install_list) {
+  VLOG(1) << __FUNCTION__ << ": " << install_params.installer_state.root_key();
   DCHECK(install_list);
 
   const InstallerState& installer_state = *install_params.installer_state;
@@ -858,6 +863,10 @@ void AddInstallWorkItems(const InstallParams& install_params,
 
   const base::FilePath& target_path = installer_state.target_path();
 
+  VLOG(1) << "Cureent version " << current_version.GetString()
+        << "new version : " << new_version.GetString()
+        << "target path: " << target_path.AsUTF16Unsafe();
+
   // A temp directory that work items need and the actual install directory.
   install_list->AddCreateDirWorkItem(temp_path);
   install_list->AddCreateDirWorkItem(target_path);
