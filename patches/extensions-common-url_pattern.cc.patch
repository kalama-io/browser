diff --git a/extensions/common/url_pattern.cc b/extensions/common/url_pattern.cc
index 5f94b95d6ca4d5bf4291515acb83f3fa921d152f..a4623d94bd0aff602e82ea97156a393fef6ca06a 100644
--- a/extensions/common/url_pattern.cc
+++ b/extensions/common/url_pattern.cc
@@ -8,6 +8,7 @@
 
 #include <ostream>
 
+#include "base/logging.h"
 #include "base/strings/pattern.h"
 #include "base/strings/strcat.h"
 #include "base/strings/string_number_conversions.h"
@@ -33,7 +34,7 @@ const char* const kValidSchemes[] = {
     content::kChromeUIScheme,  extensions::kExtensionScheme,
     url::kFileSystemScheme,    url::kWsScheme,
     url::kWssScheme,           url::kDataScheme,
-    url::kUuidInPackageScheme,
+    url::kUuidInPackageScheme, url::kCyfsScheme,
 };
 
 const int kValidSchemeMasks[] = {
@@ -48,6 +49,7 @@ const int kValidSchemeMasks[] = {
     URLPattern::SCHEME_WSS,
     URLPattern::SCHEME_DATA,
     URLPattern::SCHEME_UUID_IN_PACKAGE,
+    URLPattern::SCHEME_CYFS,
 };
 
 static_assert(std::size(kValidSchemes) == std::size(kValidSchemeMasks),
@@ -376,6 +378,10 @@ void URLPattern::SetMatchSubdomains(bool val) {
 bool URLPattern::SetScheme(base::StringPiece scheme) {
   spec_.clear();
   scheme_ = scheme;
+  if (scheme_ == "cyfs") {
+    valid_schemes_ &= (SCHEME_CYFS | SCHEME_HTTP | SCHEME_HTTPS);
+    return true;
+  }
   if (scheme_ == "*") {
     valid_schemes_ &= (SCHEME_HTTP | SCHEME_HTTPS);
   } else if (!IsValidScheme(scheme_)) {
